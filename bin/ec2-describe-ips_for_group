#!/bin/bash
if [ -z '$1' ]; then
  echo "You must provide a security group name."
  exit 1
fi

TMP_FILE_INSTANCES=`mktemp -t instances`
TMP_FILE_TAGS=`mktemp -t tags`
SECURITY_GROUP=`ec2-describe-group-id_from_name $1`

function get_instances() {
  ec2_command="ec2-describe-instances --show-empty-fields"
  #ec2_command="cat /tmp/out"
  $ec2_command | grep ^INSTANCE | awk '{ print $2,$6,$4,$29 }' | grep "\ running\ " | grep "\ $SECURITY_GROUP$" > $TMP_FILE_INSTANCES
}

function get_names() {
  tags_cmd="ec2-describe-tags"
  for instance_id in $@; do
    tags_cmd="`echo -n $tags_cmd` -F \"resource-id=$instance_id\""
  done

  $tags_cmd > $TMP_FILE_TAGS

  for instance_id in $@; do
    name=`cat $TMP_FILE_TAGS | grep $instance_id | grep "\ Name\ " | awk '{ print $5 }'`
    name=`cat $TMP_FILE_TAGS | grep $instance_id | awk '{ print $4,$5 }' | grep "^Name" | cut -d\  -f2-`
    if [ -z $name ]; then name="$instance_id"; fi
    sed -i '.bak' "s/$instance_id/$name/" $TMP_FILE_INSTANCES
  done
}

get_instances

instances=`cat $TMP_FILE_INSTANCES | awk '{ print $1,":" }' | tr -d [:space:] | sed 's/:/ /g'`
get_names $instances

cat $TMP_FILE_INSTANCES | awk '{ print $1,"-",$3 }' | sort

rm $TMP_FILE_INSTANCES $TMP_FILE_TAGS
